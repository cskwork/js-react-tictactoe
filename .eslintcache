[{"C:\\Users\\사용자\\Documents\\Github\\js-react-tictactoe\\src\\index.js":"1"},{"size":3512,"mtime":1611392136375,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"tgvdpc","C:\\Users\\사용자\\Documents\\Github\\js-react-tictactoe\\src\\index.js",["7","8"],"/*\r\nGet React Framework\r\n -Declare square component which can save state.value ('X') from button action.\r\n -Declare board component which makes sqaure components and saves each state. Also declares the square component\r\n -Declare game components which makes the layout for the board and declares the Board component\r\n -ReactDOM run main game component\r\n\r\n*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: null,\r\n\t\t};\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t/*\r\n\t\t\t<button className=\"square\" onClick={function(){ alert('click');} \r\n\t\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t{this.props.value}\r\n\t\t\t</button>*/\r\n\t\t\t/* REFACTORED to use arrow function syntax */\r\n\t\t\t<button className=\"square\" \r\n\t\t\t\t\tonClick={ () => this.setState({value:'X'})}>\r\n\t\t\t\t{this.state.value}\r\n\t\t\t</button>\r\n\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nclass Board extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsquares: Array(9).fill(null),\r\n\t\t};\r\n\t}\r\n\trenderSquare(i){\r\n\t\treturn <Square value={ this.state.squares[i] } \r\n\t\t\t\t\t   onClick={ () => this.handleClick(i)} />;\r\n\t}\r\n\t\r\n\thandleClick(i){\r\n\t\tconst squares = this.state.squares.slice();\r\n\t\tsquare[i] = 'X';\r\n\t\tthis.setState ({ squares: squares});\r\n\t}renderSquare(i){\r\n\t\treturn (\r\n\t\t\t\t<Square value = { this.state.squares[i] }\r\n\t\t\t\t\t    onClick= { () => this.handleClick(i) } />\r\n\t\t\t\t);\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst status='Next player: X';\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"status\">{status}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board />{/*INSERT BOARD COMPONENT*/}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{/*status*/}</div>\r\n\t\t\t\t\t<ol>{/*TODO*/}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n//========================\r\n\r\nReactDOM.render(\r\n\t\t\t\t<Game />,\r\n\t\t\t\tdocument.getElementById('root')\r\n\t\t\t\t);\r\n\r\n/*class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n    };\r\n  }\r\n\r\n  handleClick(i) {    \r\n  \tconst squares = this.state.squares.slice();    \r\n  \t\t\t\t\tsquares[i] = 'X';    \r\n  \t\t\t\t\tthis.setState({squares: squares});  \r\n  \t\t\t\t}renderSquare(i) {\r\n    \t\t\t\t\t\treturn (\r\n      \t\t\t\t\t\t<Square value={ this.state.squares[i] } onClick={() => this.handleClick(i)}/>\r\n      \t\t\t\t\t\t);\r\n  \t\t\t\t}\r\n\r\n  render() {\r\n    const status = 'Next player: X';\r\n    return (\r\n    <div>        \r\n\t\t<div className=\"status\">{status}</div>        \r\n\t\t<div className=\"board-row\">          \r\n\t\t  {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>        \r\n\t\t<div className=\"board-row\"> \r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div> \r\n        <div className=\"board-row\">  \r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>      \r\n\t</div>);\r\n  }\r\n}*/",{"ruleId":"9","severity":2,"message":"10","line":52,"column":3,"nodeType":"11","messageId":"12","endLine":52,"endColumn":9},{"ruleId":"13","severity":1,"message":"14","line":54,"column":3,"nodeType":"15","messageId":"16","endLine":59,"endColumn":3},"no-undef","'square' is not defined.","Identifier","undef","no-dupe-class-members","Duplicate name 'renderSquare'.","MethodDefinition","unexpected"]